diff --git a/node_modules/@projectstorm/react-diagrams-core/dist/es/entities/link/LinkWidget.js b/node_modules/@projectstorm/react-diagrams-core/dist/es/entities/link/LinkWidget.js
index 9261cd0..bc621d4 100644
--- a/node_modules/@projectstorm/react-diagrams-core/dist/es/entities/link/LinkWidget.js
+++ b/node_modules/@projectstorm/react-diagrams-core/dist/es/entities/link/LinkWidget.js
@@ -28,6 +28,9 @@ class LinkWidget extends React.Component {
     }
     installTarget() {
         this.targetListener && this.targetListener.deregister();
+
+		// FIXES: link widget trying to register listener on ports that aren't set yet
+		if (!this.props.link.getTargetPort()) return;
         this.targetListener = this.props.link.getTargetPort().registerListener({
             reportInitialPosition: (event) => {
                 this.forceUpdate();
@@ -36,6 +39,9 @@ class LinkWidget extends React.Component {
     }
     installSource() {
         this.sourceListener && this.sourceListener.deregister();
+
+		// FIXES: link widget trying to register listener on ports that aren't set yet
+		if (!this.props.link.getSourcePort()) return;
         this.sourceListener = this.props.link.getSourcePort().registerListener({
             reportInitialPosition: (event) => {
                 this.forceUpdate();
diff --git a/node_modules/@projectstorm/react-diagrams-core/dist/es/entities/node/NodeWidget.js b/node_modules/@projectstorm/react-diagrams-core/dist/es/entities/node/NodeWidget.js
index ef8c9c3..1474432 100644
--- a/node_modules/@projectstorm/react-diagrams-core/dist/es/entities/node/NodeWidget.js
+++ b/node_modules/@projectstorm/react-diagrams-core/dist/es/entities/node/NodeWidget.js
@@ -24,6 +24,10 @@ class NodeWidget extends React.Component {
     componentWillUnmount() {
         this.ob.disconnect();
         this.ob = null;
+
+		// FIXES: node selection not being deregistered upon deletion
+		this.listener.deregister();
+		this.listener = null;
     }
     componentDidUpdate(prevProps, prevState, snapshot) {
         if (this.listener && this.props.node !== prevProps.node) {
diff --git a/node_modules/@projectstorm/react-diagrams-core/dist/es/states/DragNewLinkState.js b/node_modules/@projectstorm/react-diagrams-core/dist/es/states/DragNewLinkState.js
index 0320d98..4a60993 100644
--- a/node_modules/@projectstorm/react-diagrams-core/dist/es/states/DragNewLinkState.js
+++ b/node_modules/@projectstorm/react-diagrams-core/dist/es/states/DragNewLinkState.js
@@ -36,6 +36,8 @@ class DragNewLinkState extends react_canvas_core_1.AbstractDisplacementState {
                         this.link.setTargetPort(model);
                         model.reportPosition();
                         this.engine.repaintCanvas();
+                        // FIX/HACK to get linksUpdated event when connected to another port
+                        this.engine.getModel().fireEvent({}, 'linksUpdated');
                         return;
                     }
                 }
diff --git a/node_modules/@projectstorm/react-diagrams-core/src/entities/link/LinkWidget.tsx b/node_modules/@projectstorm/react-diagrams-core/src/entities/link/LinkWidget.tsx
index a64c081..1e577db 100644
--- a/node_modules/@projectstorm/react-diagrams-core/src/entities/link/LinkWidget.tsx
+++ b/node_modules/@projectstorm/react-diagrams-core/src/entities/link/LinkWidget.tsx
@@ -47,6 +47,9 @@ export class LinkWidget extends React.Component<LinkProps, LinkState> {
 
 	installTarget() {
 		this.targetListener && this.targetListener.deregister();
+
+		// FIXES: link widget trying to register listener on ports that aren't set yet
+		if (!this.props.link.getTargetPort()) return;
 		this.targetListener = this.props.link.getTargetPort().registerListener({
 			reportInitialPosition: (event: BaseEntityEvent<BasePositionModel>) => {
 				this.forceUpdate();
@@ -56,6 +59,9 @@ export class LinkWidget extends React.Component<LinkProps, LinkState> {
 
 	installSource() {
 		this.sourceListener && this.sourceListener.deregister();
+
+		// FIXES: link widget trying to register listener on ports that aren't set yet
+		if (!this.props.link.getSourcePort()) return;
 		this.sourceListener = this.props.link.getSourcePort().registerListener({
 			reportInitialPosition: (event: BaseEntityEvent<BasePositionModel>) => {
 				this.forceUpdate();
diff --git a/node_modules/@projectstorm/react-diagrams-core/src/entities/node/NodeWidget.tsx b/node_modules/@projectstorm/react-diagrams-core/src/entities/node/NodeWidget.tsx
index 271b268..f90b7f1 100644
--- a/node_modules/@projectstorm/react-diagrams-core/src/entities/node/NodeWidget.tsx
+++ b/node_modules/@projectstorm/react-diagrams-core/src/entities/node/NodeWidget.tsx
@@ -36,6 +36,10 @@ export class NodeWidget extends React.Component<NodeProps> {
 	componentWillUnmount(): void {
 		this.ob.disconnect();
 		this.ob = null;
+
+		// FIXES: node selection not being deregistered upon deletion
+		this.listener.deregister();
+		this.listener = null;
 	}
 
 	componentDidUpdate(prevProps: Readonly<NodeProps>, prevState: Readonly<any>, snapshot?: any): void {
